---
title: "Panorama Estado do RJ Covid-19"
output:
flexdashboard::flex_dashboard:
vertical_layout: fill
---
```{r setup, include=FALSE}
{library(flexdashboard)
library(shiny)
library(tidyverse)
library(ggimage)
library(gganimate)
library(png)
library(RCurl)
library(lubridate)
library(tmap)
#devtools::install_github("rpradosiqueira/brazilmaps")
library(brazilmaps)
library(readxl)
library(gridExtra)
library(ggrepel)
library(scales)
library(stringr)
library(ggthemes)
library(transformr)
library(gifski)
library(RColorBrewer)
library(grid)
library(viridis)
library(hrbrthemes)
#devtools::install_github("fndemarqui/readCovid19")
library(readCovid19)
library(pracma)
library(stringi)
library(ggsn)
library(magick)
library(cowplot)
library(plotly)
library(sidrar)}
##Para baixar dados .gz
con <- gzcon(url(paste("https://github.com/wcota/covid19br/blob/master/cases-brazil-cities-time.csv.gz?raw=true","aa_combined-20110321.csv.gz", sep="")))
dat <- read_csv(con)
RJ <- filter(dat, state=="RJ")
#########################################################################################
#Primeira Dose
temp <- tempfile()
download.file(url = "http://sistemas.saude.rj.gov.br/tabnetbd/csv/pni_covid16352843655.xlsx",
destfile = temp, mode="wb")
dados <- read_excel(temp)
dados <- dados[-c(1:3,5),]
names(dados)= dados[1,]
dados <- dados[-c(1),]
dados <- select(dados, -Total)
dados = dados |>
rename(date='Data de aplicação')
dados$date= as.Date.character(dados$date, tryFormats= "%Y/%m/%d")
dados$date= as.character(dados$date)
for (i in 1:length(dados$date)){
if(is.na(dados$date[i]==T)) dados$date[i]="Nao informado"
}
dados= dplyr::filter(dados, date!="Nao informado")
#dados$date= as.Date.character(dados$date, tryFormats= "%Y/%m/%d")
dados_reorg = dados |>
gather(key = "city",
value = "D1",
2:93)
dados_reorg$D1= as.numeric(dados_reorg$D1)
###############################################################################################
#Segunda Dose/ Dose Unica
temp <- tempfile()
download.file(url = "http://sistemas.saude.rj.gov.br/tabnetbd/csv/pni_covid16352843680.xlsx",
destfile = temp, mode="wb")
dados2 <- read_excel(temp)
dados2 <- dados2[-c(1:3,5),]
names(dados2)= dados2[1,]
dados2 <- dados2[-c(1),]
dados2 <- select(dados2, -Total)
dados2 = dados2 |>
rename(date='Data de aplicação')
dados2$date= as.Date.character(dados2$date, tryFormats= "%Y/%m/%d")
dados2$date= as.character(dados2$date)
for (i in 1:length(dados2$date)){
if(is.na(dados2$date[i]==T)) dados2$date[i]="Nao informado"
}
dados2= dplyr::filter(dados2, date!="Nao informado")
#dados2$date= as.Date.character(dados2$date, tryFormats= "%Y/%m/%d")
dados2_reorg = dados2 |>
gather(key = "city",
value = "D2",
2:93)
dados2_reorg$D2= as.numeric(dados2_reorg$D2)
###############################################################################################
#Terceira Dose
temp <- tempfile()
download.file(url = "http://sistemas.saude.rj.gov.br/tabnetbd/csv/pni_covid16352843693.xlsx",
destfile = temp, mode="wb")
dados3 <- read_excel(temp)
dados3 <- dados3[-c(1:3,5),]
names(dados3)= dados3[1,]
dados3 <- dados3[-c(1),]
dados3 <- select(dados3, -Total)
dados3 = dados3 |>
rename(date='Data de aplicação')
dados3$date= as.Date.character(dados3$date, tryFormats= "%Y/%m/%d")
dados3$date= as.character(dados3$date)
for (i in 1:length(dados3$date)){
if(is.na(dados3$date[i]==T)) dados3$date[i]="Nao informado"
}
dados3= dplyr::filter(dados3, date!="Nao informado")
#dados3$date= as.Date.character(dados3$date, tryFormats= "%Y/%m/%d")
dados3_reorg = dados3 |>
gather(key = "city",
value = "D3",
2:87)
dados3_reorg$D3= as.numeric(dados3_reorg$D3)
###############################################################################################
dados = dados_reorg |>
left_join(dados2_reorg, by=c("city", "date"))
dados = dados |>
left_join(dados3_reorg, by=c("city", "date"))
RJ$date= as.character(RJ$date)
RJ = RJ |>
mutate(city = sub(pattern = "/RJ", replacement = "", x = city)) |>
filter(city!="CASO SEM LOCALIZAÇÃO DEFINIDA") |>
left_join(dados, by=c("city", "date"))
RJ$date= as.Date.character(RJ$date, tryFormats= "%Y-%m-%d")
###############################################################################################
#Metodo2, ele baixa no tempfile
temp <- tempfile()
data_sis <- Sys.Date()-2
download.file(url = paste0("https://s3-sa-east-1.amazonaws.com/ckan.saude.gov.br/Leitos/",data_sis,"/esus-vepi.LeitoOcupacao.csv"),
destfile = temp)
leitos <- read_csv(temp)
leitos <- leitos |>
filter(estado=="Rio de Janeiro") |>
rename(city= municipio, date= dataNotificacao) |>
select(city, date, ocupacaoConfirmadoCli, ocupacaoConfirmadoUti) |>
mutate(date= format(date,"%Y-%m-%d")) |>
group_by(city, date) |>
summarise(ocupacaoConfirmadoCli= sum(ocupacaoConfirmadoCli),
ocupacaoConfirmadoUti= sum(ocupacaoConfirmadoUti))
RJ$date= as.character(RJ$date)
RJ= RJ |>
left_join(leitos, by=c("city", "date"))
RJ$date= as.Date.character(RJ$date, tryFormats= "%Y-%m-%d")
#pop dos municipios do RJ 2021 (na coluna Valor)
#municipios = get_sidra(api="/t/6579/n6/3300605,3302205,3302304,3303104,3304102,3300902,3303005,3304706,3301009,3301405,3302403,3304805,3305000,3301108,3301207,3301603,3302106,3305703,3303708,3305406,3306008,3300506,3301504,3304607,3305307,3305901,3300308,3300407,3304201,3304508,3306107,3306305,3303401,3303906,3305802,3301801,3302809,3302908,3304003,3304409,3306206,3300803,3301306,3304300,3305604,3301702,3301900,3302007,3302502,3302601,3302700,3303203,3303302,3303500,3303609,3304904,3305109,3300209,3300704,3305208,3305505,3300100,3303807,3304557,3302056,3304151,3302254,3305158,3303856,3300258,3300233,3300936,3301876,3302452,3303955,3304110,3304755,3305133,3305554,3305752,3300159,3300225,3300456,3300951,3301157,3301850,3302270,3304128,3304144,3304524,3306156,3302858/v/all/p/last%201")
municipios <- load("municipio.RData")
municipios = municipios |>
rename(ibgeID= 'Município (Código)', populacao= Valor) |>
arrange(ibgeID) |>
select(ibgeID, populacao)
#casosRJ_final = BaseFinalRJ
casosRJ_final = RJ
#table(casosRJ_final$Municipios)
casosRJ_final <- casosRJ_final |> dplyr::filter(ibgeID!=33)
municipios |> dplyr::rename(ibeID=populacao)
municipios$ibgeID <- as.numeric(municipios$ibgeID)
casosRJ_final <- left_join(casosRJ_final, municipios, by="ibgeID")
aux_semana <- casosRJ_final |>
dplyr::distinct(epi_week)
aux_nome <- casosRJ_final |>
dplyr::distinct(city)
casosRJ_final$date <- ymd(casosRJ_final$date)
aux_data = casosRJ_final |>
distinct(date)
MM_casos = matrix(NA, dim(aux_nome)[1], nrow = length(aux_data$date))
MM_obitos = matrix(NA, ncol = dim(aux_nome)[1], nrow = length(aux_data$date))
MM_ocup_Cli = matrix(NA, ncol=dim(aux_nome)[1], nrow = length(aux_data$date))
MM_ocup_Uti = matrix(NA, ncol=dim(aux_nome)[1], nrow = length(aux_data$date))
j = 1
for(i in aux_nome$city){
base_aux = casosRJ_final  |>
filter(city == i) |>
arrange(date) |>
distinct(city, date, .keep_all = T)
l = as.numeric(difftime(base_aux$date[1], as.Date("2020-03-05", units="days"))+1)
d = as.numeric(as.numeric(difftime(max(base_aux$date), as.Date("2020-03-05", units="days"))+1))
MM_casos[l:d,j] = movavg(base_aux$newCases, n = 7,type = "s")
MM_obitos[l:d,j] = movavg(base_aux$newDeaths, n = 7,type = "s")
MM_ocup_Cli[l:d,j] = movavg(base_aux$ocupacaoConfirmadoCli, n=7, type="s")
MM_ocup_Uti[l:d,j] = movavg(base_aux$ocupacaoConfirmadoUti, n=7, type="s")
j = j+1
}
colnames(MM_casos) = aux_nome$city
colnames(MM_obitos) = aux_nome$city
colnames(MM_ocup_Cli) = aux_nome$city
colnames(MM_ocup_Uti) = aux_nome$city
#Criando a base empilhada de casos
MM_aux_casos = as_tibble(MM_casos)
MM_aux_casos$date = aux_data$date
MM_aux_geral_casos = gather(MM_aux_casos, key = "city", value = "MM_casos", -date)
#Criando a base empilhada dos obitos
MM_aux_obitos = as_tibble(MM_obitos)
MM_aux_obitos$date = aux_data$date
MM_aux_geral_obitos = gather(MM_aux_obitos, key = "city", value = "MM_obitos", -date)
#Criando a base empilhada dos leitos clinicos ocupados
MM_aux_ocup_Cli <- as_tibble(MM_ocup_Cli)
MM_aux_ocup_Cli$date <- aux_data$date
MM_aux_geral_ocup_Cli <- gather(MM_aux_ocup_Cli, key = "city", value = "MM_ocup_Cli", -date)
#Criando a base empilhada dos leitos de UTI ocupados
MM_aux_ocup_Uti <- as_tibble(MM_ocup_Uti)
MM_aux_ocup_Uti$date <- aux_data$date
MM_aux_geral_ocup_Uti <- gather(MM_aux_ocup_Uti, key = "city", value = "MM_ocup_Uti", -date)
casosRJ_final = left_join(casosRJ_final,MM_aux_geral_casos, by = c("date", "city"))
casosRJ_final = left_join(casosRJ_final,MM_aux_geral_obitos, by = c("date", "city"))
casosRJ_final = left_join(casosRJ_final,MM_aux_geral_ocup_Cli, by = c("date", "city"))
casosRJ_final = left_join(casosRJ_final,MM_aux_geral_ocup_Uti, by = c("date", "city"))
#pop dos estados do Brasil 2021 (na coluna Valor)
#estados = get_sidra(api="/t/6579/n3/all/v/all/p/last%201")
#estados = estados |>
#  rename(ibgeID= 'Unidade da Federação (Código)', populacao= Valor) |>
#  arrange(ibgeID) |>
#  select(ibgeID, populacao)
casosRJ_final$populacao= 17463349
###########################################################################################
#SRAG20
#Mudar a data todas as segundas
temp <- tempfile()
data_sis <- format(Sys.Date()-7, "%d-%m-%Y")
download.file(url = "https://s3-sa-east-1.amazonaws.com/ckan.saude.gov.br/SRAG/2020/INFLUD-18-10-2021.csv",
destfile = temp)
